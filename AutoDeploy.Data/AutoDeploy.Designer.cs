//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Build_BuildTypes", "BuildTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.BuildTypes), "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Build), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Build_ProjectDetails", "ProjectDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.ProjectDetails), "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Build), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Build_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Status), "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Build), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Package_Build", "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Build), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Package), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_TestCaseDetails_Build", "Build", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Build), "TestCaseDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.TestCaseDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Deploy_ReleasePackage", "ReleasePackage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.ReleasePackage), "Deploy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Deploy), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Deploy_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Status), "Deploy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Deploy), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_UITestCasesDetails_Deploy", "Deploy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Deploy), "UITestCasesDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.UITestCasesDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Package_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Status), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Package), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Package_VersionControlDatails", "VersionControlDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.VersionControlDetails), "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Package), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_ReleasePackage_Package", "Package", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Package), "ReleasePackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.ReleasePackage), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_ProjectDetails_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.User), "ProjectDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.ProjectDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_ProjectDetails_VersionControlDatails", "VersionControlDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.VersionControlDetails), "ProjectDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.ProjectDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_ReleasePackage_Release", "Release", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Release), "ReleasePackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.ReleasePackage), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_User_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.User), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_TestCaseDetails_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Status), "TestCaseDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.TestCaseDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_UITestCasesDetails_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.Status), "UITestCasesDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.UITestCasesDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_VersionControlDatails_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.User), "VersionControlDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.VersionControlDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_VersionControlDatails_VersionControlType", "VersionControlType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.VersionControlType), "VersionControlDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.VersionControlDetails), true)]
[assembly: EdmRelationshipAttribute("AutoDeployModel", "FK_Deploy_DeploymentServers", "DeploymentServers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AutoDeploy.DataAccessLayer.DeploymentServers), "Deploy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AutoDeploy.DataAccessLayer.Deploy), true)]

#endregion

namespace AutoDeploy.DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AutoDeployEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AutoDeployEntities object using the connection string found in the 'AutoDeployEntities' section of the application configuration file.
        /// </summary>
        public AutoDeployEntities() : base("name=AutoDeployEntities", "AutoDeployEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutoDeployEntities object.
        /// </summary>
        public AutoDeployEntities(string connectionString) : base(connectionString, "AutoDeployEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AutoDeployEntities object.
        /// </summary>
        public AutoDeployEntities(EntityConnection connection) : base(connection, "AutoDeployEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Build> Build
        {
            get
            {
                if ((_Build == null))
                {
                    _Build = base.CreateObjectSet<Build>("Build");
                }
                return _Build;
            }
        }
        private ObjectSet<Build> _Build;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BuildTypes> BuildTypes
        {
            get
            {
                if ((_BuildTypes == null))
                {
                    _BuildTypes = base.CreateObjectSet<BuildTypes>("BuildTypes");
                }
                return _BuildTypes;
            }
        }
        private ObjectSet<BuildTypes> _BuildTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Deploy> Deploy
        {
            get
            {
                if ((_Deploy == null))
                {
                    _Deploy = base.CreateObjectSet<Deploy>("Deploy");
                }
                return _Deploy;
            }
        }
        private ObjectSet<Deploy> _Deploy;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Package> Package
        {
            get
            {
                if ((_Package == null))
                {
                    _Package = base.CreateObjectSet<Package>("Package");
                }
                return _Package;
            }
        }
        private ObjectSet<Package> _Package;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectDetails> ProjectDetails
        {
            get
            {
                if ((_ProjectDetails == null))
                {
                    _ProjectDetails = base.CreateObjectSet<ProjectDetails>("ProjectDetails");
                }
                return _ProjectDetails;
            }
        }
        private ObjectSet<ProjectDetails> _ProjectDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Release> Release
        {
            get
            {
                if ((_Release == null))
                {
                    _Release = base.CreateObjectSet<Release>("Release");
                }
                return _Release;
            }
        }
        private ObjectSet<Release> _Release;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReleasePackage> ReleasePackage
        {
            get
            {
                if ((_ReleasePackage == null))
                {
                    _ReleasePackage = base.CreateObjectSet<ReleasePackage>("ReleasePackage");
                }
                return _ReleasePackage;
            }
        }
        private ObjectSet<ReleasePackage> _ReleasePackage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestCaseDetails> TestCaseDetails
        {
            get
            {
                if ((_TestCaseDetails == null))
                {
                    _TestCaseDetails = base.CreateObjectSet<TestCaseDetails>("TestCaseDetails");
                }
                return _TestCaseDetails;
            }
        }
        private ObjectSet<TestCaseDetails> _TestCaseDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UITestCasesDetails> UITestCasesDetails
        {
            get
            {
                if ((_UITestCasesDetails == null))
                {
                    _UITestCasesDetails = base.CreateObjectSet<UITestCasesDetails>("UITestCasesDetails");
                }
                return _UITestCasesDetails;
            }
        }
        private ObjectSet<UITestCasesDetails> _UITestCasesDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VersionControlDetails> VersionControlDetails
        {
            get
            {
                if ((_VersionControlDetails == null))
                {
                    _VersionControlDetails = base.CreateObjectSet<VersionControlDetails>("VersionControlDetails");
                }
                return _VersionControlDetails;
            }
        }
        private ObjectSet<VersionControlDetails> _VersionControlDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VersionControlType> VersionControlType
        {
            get
            {
                if ((_VersionControlType == null))
                {
                    _VersionControlType = base.CreateObjectSet<VersionControlType>("VersionControlType");
                }
                return _VersionControlType;
            }
        }
        private ObjectSet<VersionControlType> _VersionControlType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeploymentServers> DeploymentServers
        {
            get
            {
                if ((_DeploymentServers == null))
                {
                    _DeploymentServers = base.CreateObjectSet<DeploymentServers>("DeploymentServers");
                }
                return _DeploymentServers;
            }
        }
        private ObjectSet<DeploymentServers> _DeploymentServers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Build EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuild(Build build)
        {
            base.AddObject("Build", build);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BuildTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuildTypes(BuildTypes buildTypes)
        {
            base.AddObject("BuildTypes", buildTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deploy EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeploy(Deploy deploy)
        {
            base.AddObject("Deploy", deploy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Package EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPackage(Package package)
        {
            base.AddObject("Package", package);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectDetails(ProjectDetails projectDetails)
        {
            base.AddObject("ProjectDetails", projectDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Release EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelease(Release release)
        {
            base.AddObject("Release", release);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReleasePackage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReleasePackage(ReleasePackage releasePackage)
        {
            base.AddObject("ReleasePackage", releasePackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Status EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestCaseDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestCaseDetails(TestCaseDetails testCaseDetails)
        {
            base.AddObject("TestCaseDetails", testCaseDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UITestCasesDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUITestCasesDetails(UITestCasesDetails uITestCasesDetails)
        {
            base.AddObject("UITestCasesDetails", uITestCasesDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VersionControlDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVersionControlDetails(VersionControlDetails versionControlDetails)
        {
            base.AddObject("VersionControlDetails", versionControlDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VersionControlType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVersionControlType(VersionControlType versionControlType)
        {
            base.AddObject("VersionControlType", versionControlType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeploymentServers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeploymentServers(DeploymentServers deploymentServers)
        {
            base.AddObject("DeploymentServers", deploymentServers);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="Build")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Build : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Build object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="buildTypeID">Initial value of the BuildTypeID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Build CreateBuild(global::System.Int32 id, global::System.Int32 buildTypeID, global::System.Int32 projectID, global::System.Int32 status, global::System.DateTime createdDate)
        {
            Build build = new Build();
            build.ID = id;
            build.BuildTypeID = buildTypeID;
            build.ProjectID = projectID;
            build.Status = status;
            build.CreatedDate = createdDate;
            return build;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildTypeID
        {
            get
            {
                return _BuildTypeID;
            }
            set
            {
                OnBuildTypeIDChanging(value);
                ReportPropertyChanging("BuildTypeID");
                _BuildTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildTypeID");
                OnBuildTypeIDChanged();
            }
        }
        private global::System.Int32 _BuildTypeID;
        partial void OnBuildTypeIDChanging(global::System.Int32 value);
        partial void OnBuildTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Build_BuildTypes", "BuildTypes")]
        public BuildTypes BuildTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildTypes>("AutoDeployModel.FK_Build_BuildTypes", "BuildTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildTypes>("AutoDeployModel.FK_Build_BuildTypes", "BuildTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BuildTypes> BuildTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BuildTypes>("AutoDeployModel.FK_Build_BuildTypes", "BuildTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BuildTypes>("AutoDeployModel.FK_Build_BuildTypes", "BuildTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Build_ProjectDetails", "ProjectDetails")]
        public ProjectDetails ProjectDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDetails>("AutoDeployModel.FK_Build_ProjectDetails", "ProjectDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDetails>("AutoDeployModel.FK_Build_ProjectDetails", "ProjectDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectDetails> ProjectDetailsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectDetails>("AutoDeployModel.FK_Build_ProjectDetails", "ProjectDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectDetails>("AutoDeployModel.FK_Build_ProjectDetails", "ProjectDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Build_Status", "Status")]
        public Status Status1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Build_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Build_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> Status1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Build_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("AutoDeployModel.FK_Build_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Package_Build", "Package")]
        public EntityCollection<Package> Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("AutoDeployModel.FK_Package_Build", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("AutoDeployModel.FK_Package_Build", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_TestCaseDetails_Build", "TestCaseDetails")]
        public EntityCollection<TestCaseDetails> TestCaseDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestCaseDetails>("AutoDeployModel.FK_TestCaseDetails_Build", "TestCaseDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestCaseDetails>("AutoDeployModel.FK_TestCaseDetails_Build", "TestCaseDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="BuildTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BuildTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BuildTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BuildTypes CreateBuildTypes(global::System.Int32 id, global::System.String name)
        {
            BuildTypes buildTypes = new BuildTypes();
            buildTypes.ID = id;
            buildTypes.Name = name;
            return buildTypes;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Build_BuildTypes", "Build")]
        public EntityCollection<Build> Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Build>("AutoDeployModel.FK_Build_BuildTypes", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Build>("AutoDeployModel.FK_Build_BuildTypes", "Build", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="Deploy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deploy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Deploy object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="serverID">Initial value of the ServerID property.</param>
        /// <param name="releasePackageID">Initial value of the ReleasePackageID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Deploy CreateDeploy(global::System.Int32 id, global::System.Int32 serverID, global::System.Int32 releasePackageID, global::System.Int32 status, global::System.DateTime createdDate)
        {
            Deploy deploy = new Deploy();
            deploy.ID = id;
            deploy.ServerID = serverID;
            deploy.ReleasePackageID = releasePackageID;
            deploy.Status = status;
            deploy.CreatedDate = createdDate;
            return deploy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerID
        {
            get
            {
                return _ServerID;
            }
            set
            {
                OnServerIDChanging(value);
                ReportPropertyChanging("ServerID");
                _ServerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServerID");
                OnServerIDChanged();
            }
        }
        private global::System.Int32 _ServerID;
        partial void OnServerIDChanging(global::System.Int32 value);
        partial void OnServerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleasePackageID
        {
            get
            {
                return _ReleasePackageID;
            }
            set
            {
                OnReleasePackageIDChanging(value);
                ReportPropertyChanging("ReleasePackageID");
                _ReleasePackageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleasePackageID");
                OnReleasePackageIDChanged();
            }
        }
        private global::System.Int32 _ReleasePackageID;
        partial void OnReleasePackageIDChanging(global::System.Int32 value);
        partial void OnReleasePackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Deploy_ReleasePackage", "ReleasePackage")]
        public ReleasePackage ReleasePackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReleasePackage>("AutoDeployModel.FK_Deploy_ReleasePackage", "ReleasePackage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReleasePackage>("AutoDeployModel.FK_Deploy_ReleasePackage", "ReleasePackage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReleasePackage> ReleasePackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReleasePackage>("AutoDeployModel.FK_Deploy_ReleasePackage", "ReleasePackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReleasePackage>("AutoDeployModel.FK_Deploy_ReleasePackage", "ReleasePackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Deploy_Status", "Status")]
        public Status Status1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Deploy_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Deploy_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> Status1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Deploy_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("AutoDeployModel.FK_Deploy_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_UITestCasesDetails_Deploy", "UITestCasesDetails")]
        public EntityCollection<UITestCasesDetails> UITestCasesDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UITestCasesDetails>("AutoDeployModel.FK_UITestCasesDetails_Deploy", "UITestCasesDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UITestCasesDetails>("AutoDeployModel.FK_UITestCasesDetails_Deploy", "UITestCasesDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Deploy_DeploymentServers", "DeploymentServers")]
        public DeploymentServers DeploymentServers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeploymentServers>("AutoDeployModel.FK_Deploy_DeploymentServers", "DeploymentServers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeploymentServers>("AutoDeployModel.FK_Deploy_DeploymentServers", "DeploymentServers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeploymentServers> DeploymentServersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeploymentServers>("AutoDeployModel.FK_Deploy_DeploymentServers", "DeploymentServers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeploymentServers>("AutoDeployModel.FK_Deploy_DeploymentServers", "DeploymentServers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="DeploymentServers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeploymentServers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeploymentServers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="serverName">Initial value of the ServerName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="domainUrl">Initial value of the DomainUrl property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static DeploymentServers CreateDeploymentServers(global::System.Int32 id, global::System.String serverName, global::System.String userName, global::System.String password, global::System.String domainUrl, global::System.DateTime createdDate)
        {
            DeploymentServers deploymentServers = new DeploymentServers();
            deploymentServers.ID = id;
            deploymentServers.ServerName = serverName;
            deploymentServers.UserName = userName;
            deploymentServers.Password = password;
            deploymentServers.DomainUrl = domainUrl;
            deploymentServers.CreatedDate = createdDate;
            return deploymentServers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DomainUrl
        {
            get
            {
                return _DomainUrl;
            }
            set
            {
                OnDomainUrlChanging(value);
                ReportPropertyChanging("DomainUrl");
                _DomainUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DomainUrl");
                OnDomainUrlChanged();
            }
        }
        private global::System.String _DomainUrl;
        partial void OnDomainUrlChanging(global::System.String value);
        partial void OnDomainUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Deploy_DeploymentServers", "Deploy")]
        public EntityCollection<Deploy> Deploy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deploy>("AutoDeployModel.FK_Deploy_DeploymentServers", "Deploy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deploy>("AutoDeployModel.FK_Deploy_DeploymentServers", "Deploy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="Package")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Package : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Package object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="buildID">Initial value of the BuildID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="packageVersion">Initial value of the PackageVersion property.</param>
        /// <param name="packagePath">Initial value of the PackagePath property.</param>
        /// <param name="versionControlID">Initial value of the VersionControlID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Package CreatePackage(global::System.Int32 id, global::System.Int32 buildID, global::System.Int32 status, global::System.String packageVersion, global::System.String packagePath, global::System.Int32 versionControlID, global::System.DateTime createdDate)
        {
            Package package = new Package();
            package.ID = id;
            package.BuildID = buildID;
            package.Status = status;
            package.PackageVersion = packageVersion;
            package.PackagePath = packagePath;
            package.VersionControlID = versionControlID;
            package.CreatedDate = createdDate;
            return package;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildID
        {
            get
            {
                return _BuildID;
            }
            set
            {
                OnBuildIDChanging(value);
                ReportPropertyChanging("BuildID");
                _BuildID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuildID");
                OnBuildIDChanged();
            }
        }
        private global::System.Int32 _BuildID;
        partial void OnBuildIDChanging(global::System.Int32 value);
        partial void OnBuildIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageVersion
        {
            get
            {
                return _PackageVersion;
            }
            set
            {
                OnPackageVersionChanging(value);
                ReportPropertyChanging("PackageVersion");
                _PackageVersion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackageVersion");
                OnPackageVersionChanged();
            }
        }
        private global::System.String _PackageVersion;
        partial void OnPackageVersionChanging(global::System.String value);
        partial void OnPackageVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackagePath
        {
            get
            {
                return _PackagePath;
            }
            set
            {
                OnPackagePathChanging(value);
                ReportPropertyChanging("PackagePath");
                _PackagePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackagePath");
                OnPackagePathChanged();
            }
        }
        private global::System.String _PackagePath;
        partial void OnPackagePathChanging(global::System.String value);
        partial void OnPackagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionControlID
        {
            get
            {
                return _VersionControlID;
            }
            set
            {
                OnVersionControlIDChanging(value);
                ReportPropertyChanging("VersionControlID");
                _VersionControlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionControlID");
                OnVersionControlIDChanged();
            }
        }
        private global::System.Int32 _VersionControlID;
        partial void OnVersionControlIDChanging(global::System.Int32 value);
        partial void OnVersionControlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Package_Build", "Build")]
        public Build Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("AutoDeployModel.FK_Package_Build", "Build").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("AutoDeployModel.FK_Package_Build", "Build").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Build> BuildReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("AutoDeployModel.FK_Package_Build", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Build>("AutoDeployModel.FK_Package_Build", "Build", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Package_Status", "Status")]
        public Status Status1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Package_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Package_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> Status1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_Package_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("AutoDeployModel.FK_Package_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Package_VersionControlDatails", "VersionControlDetails")]
        public VersionControlDetails VersionControlDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlDetails>("AutoDeployModel.FK_Package_VersionControlDatails", "VersionControlDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlDetails>("AutoDeployModel.FK_Package_VersionControlDatails", "VersionControlDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VersionControlDetails> VersionControlDetailsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlDetails>("AutoDeployModel.FK_Package_VersionControlDatails", "VersionControlDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VersionControlDetails>("AutoDeployModel.FK_Package_VersionControlDatails", "VersionControlDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ReleasePackage_Package", "ReleasePackage")]
        public EntityCollection<ReleasePackage> ReleasePackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReleasePackage>("AutoDeployModel.FK_ReleasePackage_Package", "ReleasePackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReleasePackage>("AutoDeployModel.FK_ReleasePackage_Package", "ReleasePackage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="ProjectDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectDetails object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="versionControlID">Initial value of the VersionControlID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static ProjectDetails CreateProjectDetails(global::System.Int32 id, global::System.Int32 userID, global::System.String projectName, global::System.Int32 versionControlID, global::System.DateTime createdDate)
        {
            ProjectDetails projectDetails = new ProjectDetails();
            projectDetails.ID = id;
            projectDetails.UserID = userID;
            projectDetails.ProjectName = projectName;
            projectDetails.VersionControlID = versionControlID;
            projectDetails.CreatedDate = createdDate;
            return projectDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionControlID
        {
            get
            {
                return _VersionControlID;
            }
            set
            {
                OnVersionControlIDChanging(value);
                ReportPropertyChanging("VersionControlID");
                _VersionControlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionControlID");
                OnVersionControlIDChanged();
            }
        }
        private global::System.Int32 _VersionControlID;
        partial void OnVersionControlIDChanging(global::System.Int32 value);
        partial void OnVersionControlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SolutionPath
        {
            get
            {
                return _SolutionPath;
            }
            set
            {
                OnSolutionPathChanging(value);
                ReportPropertyChanging("SolutionPath");
                _SolutionPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SolutionPath");
                OnSolutionPathChanged();
            }
        }
        private global::System.String _SolutionPath;
        partial void OnSolutionPathChanging(global::System.String value);
        partial void OnSolutionPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectPath
        {
            get
            {
                return _ProjectPath;
            }
            set
            {
                OnProjectPathChanging(value);
                ReportPropertyChanging("ProjectPath");
                _ProjectPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProjectPath");
                OnProjectPathChanged();
            }
        }
        private global::System.String _ProjectPath;
        partial void OnProjectPathChanging(global::System.String value);
        partial void OnProjectPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Configuration
        {
            get
            {
                return _Configuration;
            }
            set
            {
                OnConfigurationChanging(value);
                ReportPropertyChanging("Configuration");
                _Configuration = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Configuration");
                OnConfigurationChanged();
            }
        }
        private global::System.String _Configuration;
        partial void OnConfigurationChanging(global::System.String value);
        partial void OnConfigurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Platform
        {
            get
            {
                return _Platform;
            }
            set
            {
                OnPlatformChanging(value);
                ReportPropertyChanging("Platform");
                _Platform = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Platform");
                OnPlatformChanged();
            }
        }
        private global::System.String _Platform;
        partial void OnPlatformChanging(global::System.String value);
        partial void OnPlatformChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descrption
        {
            get
            {
                return _Descrption;
            }
            set
            {
                OnDescrptionChanging(value);
                ReportPropertyChanging("Descrption");
                _Descrption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descrption");
                OnDescrptionChanged();
            }
        }
        private global::System.String _Descrption;
        partial void OnDescrptionChanging(global::System.String value);
        partial void OnDescrptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Build_ProjectDetails", "Build")]
        public EntityCollection<Build> Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Build>("AutoDeployModel.FK_Build_ProjectDetails", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Build>("AutoDeployModel.FK_Build_ProjectDetails", "Build", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ProjectDetails_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AutoDeployModel.FK_ProjectDetails_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AutoDeployModel.FK_ProjectDetails_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AutoDeployModel.FK_ProjectDetails_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AutoDeployModel.FK_ProjectDetails_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ProjectDetails_VersionControlDatails", "VersionControlDetails")]
        public VersionControlDetails VersionControlDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlDetails>("AutoDeployModel.FK_ProjectDetails_VersionControlDatails", "VersionControlDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlDetails>("AutoDeployModel.FK_ProjectDetails_VersionControlDatails", "VersionControlDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VersionControlDetails> VersionControlDetailsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlDetails>("AutoDeployModel.FK_ProjectDetails_VersionControlDatails", "VersionControlDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VersionControlDetails>("AutoDeployModel.FK_ProjectDetails_VersionControlDatails", "VersionControlDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="Release")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Release : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Release object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Release CreateRelease(global::System.Int32 id, global::System.String version, global::System.DateTime createdDate)
        {
            Release release = new Release();
            release.ID = id;
            release.Version = version;
            release.CreatedDate = createdDate;
            return release;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ReleasePackage_Release", "ReleasePackage")]
        public EntityCollection<ReleasePackage> ReleasePackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReleasePackage>("AutoDeployModel.FK_ReleasePackage_Release", "ReleasePackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReleasePackage>("AutoDeployModel.FK_ReleasePackage_Release", "ReleasePackage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="ReleasePackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReleasePackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReleasePackage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="releaseID">Initial value of the ReleaseID property.</param>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static ReleasePackage CreateReleasePackage(global::System.Int32 id, global::System.Int32 releaseID, global::System.Int32 packageID, global::System.String note, global::System.DateTime createdDate)
        {
            ReleasePackage releasePackage = new ReleasePackage();
            releasePackage.ID = id;
            releasePackage.ReleaseID = releaseID;
            releasePackage.PackageID = packageID;
            releasePackage.Note = note;
            releasePackage.CreatedDate = createdDate;
            return releasePackage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReleaseID
        {
            get
            {
                return _ReleaseID;
            }
            set
            {
                OnReleaseIDChanging(value);
                ReportPropertyChanging("ReleaseID");
                _ReleaseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseID");
                OnReleaseIDChanged();
            }
        }
        private global::System.Int32 _ReleaseID;
        partial void OnReleaseIDChanging(global::System.Int32 value);
        partial void OnReleaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                OnPackageIDChanging(value);
                ReportPropertyChanging("PackageID");
                _PackageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PackageID");
                OnPackageIDChanged();
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Deploy_ReleasePackage", "Deploy")]
        public EntityCollection<Deploy> Deploy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deploy>("AutoDeployModel.FK_Deploy_ReleasePackage", "Deploy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deploy>("AutoDeployModel.FK_Deploy_ReleasePackage", "Deploy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ReleasePackage_Package", "Package")]
        public Package Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("AutoDeployModel.FK_ReleasePackage_Package", "Package").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("AutoDeployModel.FK_ReleasePackage_Package", "Package").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Package> PackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Package>("AutoDeployModel.FK_ReleasePackage_Package", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Package>("AutoDeployModel.FK_ReleasePackage_Package", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ReleasePackage_Release", "Release")]
        public Release Release
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("AutoDeployModel.FK_ReleasePackage_Release", "Release").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("AutoDeployModel.FK_ReleasePackage_Release", "Release").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Release> ReleaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Release>("AutoDeployModel.FK_ReleasePackage_Release", "Release");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Release>("AutoDeployModel.FK_ReleasePackage_Release", "Release", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="role1">Initial value of the Role1 property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String role1)
        {
            Role role = new Role();
            role.ID = id;
            role.Role1 = role1;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role1
        {
            get
            {
                return _Role1;
            }
            set
            {
                OnRole1Changing(value);
                ReportPropertyChanging("Role1");
                _Role1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role1");
                OnRole1Changed();
            }
        }
        private global::System.String _Role1;
        partial void OnRole1Changing(global::System.String value);
        partial void OnRole1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_User_Role", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("AutoDeployModel.FK_User_Role", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("AutoDeployModel.FK_User_Role", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="status1">Initial value of the Status1 property.</param>
        public static Status CreateStatus(global::System.Int32 id, global::System.String status1)
        {
            Status status = new Status();
            status.ID = id;
            status.Status1 = status1;
            return status;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status1
        {
            get
            {
                return _Status1;
            }
            set
            {
                OnStatus1Changing(value);
                ReportPropertyChanging("Status1");
                _Status1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status1");
                OnStatus1Changed();
            }
        }
        private global::System.String _Status1;
        partial void OnStatus1Changing(global::System.String value);
        partial void OnStatus1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Build_Status", "Build")]
        public EntityCollection<Build> Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Build>("AutoDeployModel.FK_Build_Status", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Build>("AutoDeployModel.FK_Build_Status", "Build", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Deploy_Status", "Deploy")]
        public EntityCollection<Deploy> Deploy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deploy>("AutoDeployModel.FK_Deploy_Status", "Deploy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deploy>("AutoDeployModel.FK_Deploy_Status", "Deploy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Package_Status", "Package")]
        public EntityCollection<Package> Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("AutoDeployModel.FK_Package_Status", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("AutoDeployModel.FK_Package_Status", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_TestCaseDetails_Status", "TestCaseDetails")]
        public EntityCollection<TestCaseDetails> TestCaseDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestCaseDetails>("AutoDeployModel.FK_TestCaseDetails_Status", "TestCaseDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestCaseDetails>("AutoDeployModel.FK_TestCaseDetails_Status", "TestCaseDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_UITestCasesDetails_Status", "UITestCasesDetails")]
        public EntityCollection<UITestCasesDetails> UITestCasesDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UITestCasesDetails>("AutoDeployModel.FK_UITestCasesDetails_Status", "UITestCasesDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UITestCasesDetails>("AutoDeployModel.FK_UITestCasesDetails_Status", "UITestCasesDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="TestCaseDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestCaseDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestCaseDetails object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="buildID">Initial value of the BuildID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static TestCaseDetails CreateTestCaseDetails(global::System.Int32 id, global::System.Int32 buildID, global::System.Int32 status, global::System.DateTime createdDate)
        {
            TestCaseDetails testCaseDetails = new TestCaseDetails();
            testCaseDetails.ID = id;
            testCaseDetails.BuildID = buildID;
            testCaseDetails.Status = status;
            testCaseDetails.CreatedDate = createdDate;
            return testCaseDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BuildID
        {
            get
            {
                return _BuildID;
            }
            set
            {
                if (_BuildID != value)
                {
                    OnBuildIDChanging(value);
                    ReportPropertyChanging("BuildID");
                    _BuildID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BuildID");
                    OnBuildIDChanged();
                }
            }
        }
        private global::System.Int32 _BuildID;
        partial void OnBuildIDChanging(global::System.Int32 value);
        partial void OnBuildIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                if (_CreatedDate != value)
                {
                    OnCreatedDateChanging(value);
                    ReportPropertyChanging("CreatedDate");
                    _CreatedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreatedDate");
                    OnCreatedDateChanged();
                }
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_TestCaseDetails_Build", "Build")]
        public Build Build
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("AutoDeployModel.FK_TestCaseDetails_Build", "Build").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("AutoDeployModel.FK_TestCaseDetails_Build", "Build").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Build> BuildReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Build>("AutoDeployModel.FK_TestCaseDetails_Build", "Build");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Build>("AutoDeployModel.FK_TestCaseDetails_Build", "Build", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_TestCaseDetails_Status", "Status")]
        public Status Status1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_TestCaseDetails_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_TestCaseDetails_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> Status1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_TestCaseDetails_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("AutoDeployModel.FK_TestCaseDetails_Status", "Status", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="UITestCasesDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UITestCasesDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UITestCasesDetails object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="deployeID">Initial value of the DeployeID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="creaedDate">Initial value of the CreaedDate property.</param>
        public static UITestCasesDetails CreateUITestCasesDetails(global::System.Int32 id, global::System.Int32 deployeID, global::System.Int32 status, global::System.String note, global::System.DateTime creaedDate)
        {
            UITestCasesDetails uITestCasesDetails = new UITestCasesDetails();
            uITestCasesDetails.ID = id;
            uITestCasesDetails.DeployeID = deployeID;
            uITestCasesDetails.Status = status;
            uITestCasesDetails.Note = note;
            uITestCasesDetails.CreaedDate = creaedDate;
            return uITestCasesDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeployeID
        {
            get
            {
                return _DeployeID;
            }
            set
            {
                OnDeployeIDChanging(value);
                ReportPropertyChanging("DeployeID");
                _DeployeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeployeID");
                OnDeployeIDChanged();
            }
        }
        private global::System.Int32 _DeployeID;
        partial void OnDeployeIDChanging(global::System.Int32 value);
        partial void OnDeployeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreaedDate
        {
            get
            {
                return _CreaedDate;
            }
            set
            {
                OnCreaedDateChanging(value);
                ReportPropertyChanging("CreaedDate");
                _CreaedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreaedDate");
                OnCreaedDateChanged();
            }
        }
        private global::System.DateTime _CreaedDate;
        partial void OnCreaedDateChanging(global::System.DateTime value);
        partial void OnCreaedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_UITestCasesDetails_Deploy", "Deploy")]
        public Deploy Deploy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deploy>("AutoDeployModel.FK_UITestCasesDetails_Deploy", "Deploy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deploy>("AutoDeployModel.FK_UITestCasesDetails_Deploy", "Deploy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deploy> DeployReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deploy>("AutoDeployModel.FK_UITestCasesDetails_Deploy", "Deploy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deploy>("AutoDeployModel.FK_UITestCasesDetails_Deploy", "Deploy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_UITestCasesDetails_Status", "Status")]
        public Status Status1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_UITestCasesDetails_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_UITestCasesDetails_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> Status1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("AutoDeployModel.FK_UITestCasesDetails_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("AutoDeployModel.FK_UITestCasesDetails_Status", "Status", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.Int32 roleID, global::System.String firstName, global::System.String userName, global::System.String password, global::System.DateTime createdDate)
        {
            User user = new User();
            user.ID = id;
            user.RoleID = roleID;
            user.FirstName = firstName;
            user.UserName = userName;
            user.Password = password;
            user.CreatedDate = createdDate;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ProjectDetails_User", "ProjectDetails")]
        public EntityCollection<ProjectDetails> ProjectDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDetails>("AutoDeployModel.FK_ProjectDetails_User", "ProjectDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDetails>("AutoDeployModel.FK_ProjectDetails_User", "ProjectDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_User_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AutoDeployModel.FK_User_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AutoDeployModel.FK_User_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AutoDeployModel.FK_User_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("AutoDeployModel.FK_User_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_VersionControlDatails_User", "VersionControlDetails")]
        public EntityCollection<VersionControlDetails> VersionControlDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VersionControlDetails>("AutoDeployModel.FK_VersionControlDatails_User", "VersionControlDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VersionControlDetails>("AutoDeployModel.FK_VersionControlDatails_User", "VersionControlDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="VersionControlDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VersionControlDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VersionControlDetails object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="versionControlTypeID">Initial value of the VersionControlTypeID property.</param>
        /// <param name="dominAddress">Initial value of the DominAddress property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static VersionControlDetails CreateVersionControlDetails(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 versionControlTypeID, global::System.String dominAddress, global::System.String userName, global::System.String password, global::System.DateTime createdDate, global::System.String name)
        {
            VersionControlDetails versionControlDetails = new VersionControlDetails();
            versionControlDetails.ID = id;
            versionControlDetails.UserID = userID;
            versionControlDetails.VersionControlTypeID = versionControlTypeID;
            versionControlDetails.DominAddress = dominAddress;
            versionControlDetails.UserName = userName;
            versionControlDetails.Password = password;
            versionControlDetails.CreatedDate = createdDate;
            versionControlDetails.Name = name;
            return versionControlDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionControlTypeID
        {
            get
            {
                return _VersionControlTypeID;
            }
            set
            {
                OnVersionControlTypeIDChanging(value);
                ReportPropertyChanging("VersionControlTypeID");
                _VersionControlTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionControlTypeID");
                OnVersionControlTypeIDChanged();
            }
        }
        private global::System.Int32 _VersionControlTypeID;
        partial void OnVersionControlTypeIDChanging(global::System.Int32 value);
        partial void OnVersionControlTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DominAddress
        {
            get
            {
                return _DominAddress;
            }
            set
            {
                OnDominAddressChanging(value);
                ReportPropertyChanging("DominAddress");
                _DominAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DominAddress");
                OnDominAddressChanged();
            }
        }
        private global::System.String _DominAddress;
        partial void OnDominAddressChanging(global::System.String value);
        partial void OnDominAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_Package_VersionControlDatails", "Package")]
        public EntityCollection<Package> Package
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Package>("AutoDeployModel.FK_Package_VersionControlDatails", "Package");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Package>("AutoDeployModel.FK_Package_VersionControlDatails", "Package", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_ProjectDetails_VersionControlDatails", "ProjectDetails")]
        public EntityCollection<ProjectDetails> ProjectDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDetails>("AutoDeployModel.FK_ProjectDetails_VersionControlDatails", "ProjectDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDetails>("AutoDeployModel.FK_ProjectDetails_VersionControlDatails", "ProjectDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_VersionControlDatails_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AutoDeployModel.FK_VersionControlDatails_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AutoDeployModel.FK_VersionControlDatails_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AutoDeployModel.FK_VersionControlDatails_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AutoDeployModel.FK_VersionControlDatails_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_VersionControlDatails_VersionControlType", "VersionControlType")]
        public VersionControlType VersionControlType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlType>("AutoDeployModel.FK_VersionControlDatails_VersionControlType", "VersionControlType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlType>("AutoDeployModel.FK_VersionControlDatails_VersionControlType", "VersionControlType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VersionControlType> VersionControlTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VersionControlType>("AutoDeployModel.FK_VersionControlDatails_VersionControlType", "VersionControlType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VersionControlType>("AutoDeployModel.FK_VersionControlDatails_VersionControlType", "VersionControlType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AutoDeployModel", Name="VersionControlType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VersionControlType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VersionControlType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static VersionControlType CreateVersionControlType(global::System.Int32 id, global::System.String name)
        {
            VersionControlType versionControlType = new VersionControlType();
            versionControlType.ID = id;
            versionControlType.Name = name;
            return versionControlType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AutoDeployModel", "FK_VersionControlDatails_VersionControlType", "VersionControlDetails")]
        public EntityCollection<VersionControlDetails> VersionControlDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VersionControlDetails>("AutoDeployModel.FK_VersionControlDatails_VersionControlType", "VersionControlDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VersionControlDetails>("AutoDeployModel.FK_VersionControlDatails_VersionControlType", "VersionControlDetails", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
